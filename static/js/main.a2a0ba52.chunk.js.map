{"version":3,"sources":["App.js","hooks.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","list","setList","button","url","cache","useRef","initialState","status","error","data","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","a","current","fetch","response","json","message","fetchData","useFetch","process","movies","Search","class","onSubmit","e","preventDefault","target","search","value","autoFocus","autoComplete","name","placeholder","Error","Response","map","movie","index","Title","Year","onClick","length","imdbID","newList","concat","addNomination","alert","disabled","item","filter","removeNomination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA2IeA,G,MAvIH,WACV,IADgB,EAGUC,mBAAS,IAHnB,mBAGTC,EAHS,KAGFC,EAHE,OAIQF,mBAHJ,IADJ,mBAITG,EAJS,KAIHC,EAJG,OAKCJ,mBAHG,IAGbK,EALS,sBCFM,SAACC,GACvB,IAAMC,EAAQC,iBAAO,IAEfC,EAAe,CACnBC,OAAQ,OACRC,MAAO,KACPC,KAAM,IANuB,EASLC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BAAKP,GAAZ,IAA0BC,OAAQ,aACpC,IAAK,UACH,OAAO,2BAAKD,GAAZ,IAA0BC,OAAQ,UAAWE,KAAMG,EAAOE,UAC5D,IAAK,cACH,OAAO,2BAAKR,GAAZ,IAA0BC,OAAQ,QAASC,MAAOI,EAAOE,UAC3D,QACE,OAAOH,KAEVL,GApB4B,mBASxBK,EATwB,KASjBI,EATiB,KAoD/B,OA9BAC,qBAAU,WACR,IAAIC,GAAgB,EACpB,GAAKd,EAuBL,OArBe,uCAAG,gCAAAe,EAAA,yDAChBH,EAAS,CAAEF,KAAM,cACbT,EAAMe,QAAQhB,GAFF,gBAGRM,EAAOL,EAAMe,QAAQhB,GAC3BY,EAAS,CAAEF,KAAM,UAAWC,QAASL,IAJvB,gDAOWW,MAAMjB,GAPjB,cAONkB,EAPM,iBAQOA,EAASC,OARhB,WAQNb,EARM,OASZL,EAAMe,QAAQhB,GAAOM,GACjBQ,EAVQ,mDAWZF,EAAS,CAAEF,KAAM,UAAWC,QAASL,IAXzB,sDAaRQ,EAbQ,mDAcZF,EAAS,CAAEF,KAAM,cAAeC,QAAS,KAAMS,UAdnC,0DAAH,oDAmBfC,GAEO,WACLP,GAAgB,KAEjB,CAACd,IAEGQ,EDzCyBc,CAFpB3B,GAAK,oCAAiCA,EAAjC,mBAAiD4B,aAE1DnB,EATQ,EASRA,OAAQE,EATA,EASAA,KAAMD,EATN,EASMA,MAYhBmB,EAASlB,EAAKmB,OAcpB,OACE,qBAAKC,MAAM,+BAAX,SACE,sBAAKA,MAAM,8CAAX,UACE,iCACE,oBAAIA,MAAM,kDAAV,4BAKF,uBAAMC,SAjCS,SAACC,GACpBA,EAAEC,iBAEF,IAAMlC,EAAQiC,EAAEE,OAAOC,OAAOC,MAC1BrC,IACFC,EAASD,GACTiC,EAAEE,OAAOC,OAAOC,MAAQ,KA2BtB,UACE,uBACEN,MAAM,+FACNhB,KAAK,OACLuB,WAAS,EACTC,aAAa,MACbC,KAAK,SACLC,YAAY,sBAEd,yBAAQV,MAAM,+FAAd,UACG,IADH,SAES,UAGX,sBAAKA,MAAM,yBAAX,UACE,gCACc,SAAXtB,GACC,sBAAKsB,MAAM,OAAX,UACG,IADH,8CAE8C,OAGpC,UAAXtB,GAAsB,8BAAMC,IACjB,aAAXD,GACC,qBAAKsB,MAAM,wDAAX,SACG,MAGO,YAAXtB,GAEC,qCACE,sBAAKsB,MAAM,6CAAX,UACG,IADH,uBAEuB/B,EAFvB,IAE+B,OAEf,qBAAfW,EAAK+B,OACJ,oCAAO/B,EAAK+B,MAAZ,kBAGc,sBAAf/B,EAAK+B,OACJ,oCAAO/B,EAAK+B,MAAZ,kBAGiB,SAAlB/B,EAAKgC,UAAuBd,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACtC,sBACEf,MAAM,uEADR,UAIGc,EAAME,MAJT,KAIkBF,EAAMG,KAJxB,IAKE,yBACEjB,MAAM,+GACNkB,QAAS,WACP/C,EAAKgD,QAAU,EAzEf,SAACC,EAAQX,EAAMM,GACnC,IAAMM,EAAUlD,EAAKmD,OAAO,CAAEb,OAAMW,WACpChD,EAAQiD,GACRhD,EAAO+C,IAAU,EAuEOG,CAAcT,EAAMM,OAAQN,EAAME,OAClCQ,MAAM,0BAEZC,SAAUpD,EAAOyC,EAAMM,QAPzB,gBASM,SAZDL,YAmBf,gCACE,sBAAKf,MAAM,6CAAX,UACG,IADH,eAEe,OAEd7B,EAAK0C,KAAI,SAACa,EAAMX,GAAP,OACR,sBACEf,MAAM,qDADR,UAIG0B,EAAKjB,KACN,wBACET,MAAM,wFACNkB,QAAS,kBA7FA,SAACE,EAAQX,EAAMM,GACtC,IAAMM,EAAUlD,EAAKwD,QAAO,SAACD,GAAD,OAAUA,EAAKN,SAAWA,KACtDhD,EAAQiD,GACRhD,EAAO+C,IAAU,EA0FYQ,CAAiBF,EAAKN,OAAQM,EAAKV,QAFpD,sBAHKD,mBE7GNc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2a0ba52.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useFetch } from \"./hooks\";\nimport \"./App.css\";\n\nconst App = () => {\n  const initialList = [];\n  const buttonsList = {};\n  const [query, setQuery] = useState(\"\");\n  const [list, setList] = useState(initialList);\n  const [button] = useState(buttonsList);\n\n  const url = query && `http://www.omdbapi.com/?s=${query}&apikey=${process.env.REACT_APP_API_KEY}`;\n\n  const { status, data, error } = useFetch(url);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const query = e.target.search.value;\n    if (query) {\n      setQuery(query);\n      e.target.search.value = \"\";\n    }\n  };\n\n  const movies = data.Search;\n\n  const addNomination = (imdbID, name, index) => {\n    const newList = list.concat({ name, imdbID });\n    setList(newList);\n    button[imdbID] = true;\n  };\n\n  const removeNomination = (imdbID, name, index) => {\n    const newList = list.filter((item) => item.imdbID !== imdbID);\n    setList(newList);\n    button[imdbID] = false;\n  };\n\n  return (\n    <div class=\"bg-gray-50 bg-cover h-screen\">\n      <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n        <header>\n          <h1 class=\"text-4xl font-bold leading-tight text-green-500\">\n            The Shoppies\n          </h1>\n        </header>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            class=\"border-2 border-gray-300 mt-10 bg-white h-10 px-5 pr-16 rounded-lg text-l focus:outline-none\"\n            type=\"text\"\n            autoFocus\n            autoComplete=\"off\"\n            name=\"search\"\n            placeholder=\"Enter Movie Title\"\n          ></input>\n          <button class=\"py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700 ml-5\">\n            {\" \"}\n            Search{\" \"}\n          </button>\n        </form>\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div>\n            {status === \"idle\" && (\n              <div class=\"mt-5\">\n                {\" \"}\n                Let's get started by searching for a movie!{\" \"}\n              </div>\n            )}\n            {status === \"error\" && <div>{error}</div>}\n            {status === \"fetching\" && (\n              <div class=\"round animate-spin w-5 h-5 border-2 border-black mt-5\">\n                {\" \"}\n              </div>\n            )}\n            {status === \"fetched\" && (\n              \n              <>\n                <div class=\"mt-5 font-bold text-lg mb-5 text-green-500\">\n                  {\" \"}\n                  Search Results For \"{query}\"{\" \"}\n                </div>\n                {data.Error === \"Movie not found!\" && (\n                  <div> {data.Error} Try Again! </div>\n                )}\n                \n                {data.Error === \"Too many results.\" && (\n                  <div> {data.Error} Try Again! </div>\n                )}\n\n                {data.Response === \"True\" && movies.map((movie, index) => (\n                  <div\n                    class=\"bg-green-50 flex justify-between items-center mb-4 font-medium pl-3 \"\n                    key={index}\n                  >\n                    {movie.Title} ({movie.Year})\n                    <button\n                      class=\"disabled:opacity-50 py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 active:bg-green-700\"\n                      onClick={() => {\n                        list.length <= 4\n                          ? addNomination(movie.imdbID, movie.Title)\n                          : alert(\"5 Nominations Reached\");\n                      }}\n                      disabled={button[movie.imdbID]}\n                    >\n                      Add{\" \"}\n                    </button>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n          <div>\n            <div class=\"mt-5 font-bold text-green-500 text-lg mb-5\">\n              {\" \"}\n              Nominations:{\" \"}\n            </div>\n            {list.map((item, index) => (\n              <div\n                class=\"bg-green-50 flex justify-between items-center mb-4\"\n                key={index}\n              >\n                {item.name}\n                <button\n                  class=\" py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-red-500 active:bg-red-700\"\n                  onClick={() => removeNomination(item.imdbID, item.Title)}\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect, useRef, useReducer } from \"react\";\n\nexport const useFetch = (url) => {\n  const cache = useRef({});\n\n  const initialState = {\n    status: \"idle\",\n    error: null,\n    data: [],\n  };\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"FETCHING\":\n        return { ...initialState, status: \"fetching\" };\n      case \"FETCHED\":\n        return { ...initialState, status: \"fetched\", data: action.payload };\n      case \"FETCH_ERROR\":\n        return { ...initialState, status: \"error\", error: action.payload };\n      default:\n        return state;\n    }\n  }, initialState);\n\n  useEffect(() => {\n    let cancelRequest = false;\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCHING\" });\n      if (cache.current[url]) {\n        const data = cache.current[url];\n        dispatch({ type: \"FETCHED\", payload: data });\n      } else {\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          cache.current[url] = data;\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCHED\", payload: data });\n        } catch (error) {\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCH_ERROR\", payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return function cleanup() {\n      cancelRequest = true;\n    };\n  }, [url]);\n\n  return state;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}